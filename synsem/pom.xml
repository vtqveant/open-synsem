<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>ru.eventflow</groupId>
        <artifactId>synsem-parent</artifactId>
        <version>0.1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>synsem</artifactId>
    <version>0.1.0</version>
    <name>SynSem</name>
    <description>Syntactic and Semantic Processing based on OpenCCG</description>

    <properties>
        <localRepositoryPath>target/repo</localRepositoryPath>       <!-- cool stuff, see maven-install-plugin -->

        <grammar.sources>${basedir}/src/main/dotccg/synsem/</grammar.sources>
        <grammar.dir>${project.build.directory}/generated-sources/grammar</grammar.dir>
        <grammar.name>synsem.ccg</grammar.name>

        <tex.dir>${project.build.directory}/tex</tex.dir>
    </properties>

    <dependencies>

        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>hlmc</artifactId>
            <version>0.1.0</version>
        </dependency>

        <!-- local dep -->
        <dependency>
            <groupId>opennlp</groupId>
            <artifactId>ccg</artifactId>
            <version>0.9.5</version>
        </dependency>

        <dependency>
            <groupId>trove</groupId>
            <artifactId>trove</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.6</version>
        </dependency>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.2.5</version>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>**/*.xsd</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${grammar.dir}</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>ru.eventflow.synsem.Runner</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- http://stackoverflow.com/questions/2065928/maven-2-assembly-with-dependencies-jar-under-scope-system-not-included -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <id>install-openccg</id>
                        <phase>validate</phase>
                        <configuration>
                            <file>${basedir}/lib/openccg.jar</file>
                            <groupId>opennlp</groupId>
                            <artifactId>ccg</artifactId>
                            <version>0.9.5</version>
                            <packaging>jar</packaging>
                            <generatePom>true</generatePom>
                            <repositoryLayout>default</repositoryLayout>
                            <localRepositoryPath>${localRepositoryPath}</localRepositoryPath>
                        </configuration>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>merge-dotccg</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <executable>perl</executable>
                            <workingDirectory>${basedir}/src/main/dotccg/</workingDirectory>
                            <commandlineArgs>${basedir}/bin/merge-ccg.pl ${grammar.sources} ${basedir}/src/main/dotccg/${grammar.name}</commandlineArgs>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>compile-grammar</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <executable>python</executable>
                            <workingDirectory>${basedir}/src/main/dotccg/</workingDirectory>
                            <commandlineArgs>${basedir}/bin/ccg2xml.py --prefix= --dir=${grammar.dir} ${grammar.name}</commandlineArgs>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>site</phase>
                        <configuration>
                            <target>
                                <echo>Generating grammar documentation</echo>
                                <path id="grammardoc.classpath">
                                    <pathelement location="${basedir}/lib/openccg.jar"/>
                                </path>
                                <taskdef name="grammardoc" classname="opennlp.ccg.grammardoc.GrammarDoc" classpathref="grammardoc.classpath"/>
                                <grammardoc srcdir="${grammar.dir}" destdir="docs/grammar/"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <repositories>
        <repository>
            <id>runtime-repository</id>
            <url>file://${basedir}/${localRepositoryPath}</url>
        </repository>
    </repositories>

</project>
